import os
import shutil
import tkinter as tk
from tkinter import filedialog, messagebox
from pygame import mixer
import threading
import time
import calculate




# –û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ upload –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
def clear_upload_folder(folder_path):
    if os.path.exists(folder_path):
        shutil.rmtree(folder_path)
    os.makedirs(folder_path)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
def load_audio_file():
    file_path = filedialog.askopenfilename(filetypes=[("Audio Files", "*.mp3 *.wav *.ogg")])
    
    if file_path:
        upload_dir = os.path.join(os.getcwd(), "upload")
        clear_upload_folder(upload_dir)
        
        file_name = os.path.basename(file_path)
        destination = os.path.join(upload_dir, file_name)
        try:
            shutil.copy(file_path, destination)
            messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", f"–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:\n{destination}")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª:\n{str(e)}")
        
        open_audio_player(destination)
    else:
        messagebox.showwarning("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω", "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ñ–∞–π–ª.")

# –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—è —Å –ø–æ–ª–∑—É–Ω–∫–æ–º
def open_audio_player(audio_path):
    player_window = tk.Toplevel()
    player_window.title("–ê—É–¥–∏–æ-–ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å")
    player_window.geometry("600x400")

    mixer.init()

    track_length = None
    start_time = tk.IntVar(value=0)

    def update_track_length():
        nonlocal track_length
        try:
            mixer.music.load(audio_path)
            mixer.music.play(loops=0)  
            time.sleep(0.5)  
            track_length = mixer.Sound(audio_path).get_length()
            mixer.music.stop()
            slider.config(to=int(track_length - 30))  
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–ª–∏–Ω—É —Ñ–∞–π–ª–∞:\n{e}")

    def play_audio():
        mixer.music.load(audio_path)
        mixer.music.play()

    def stop_audio():
        mixer.music.stop()

    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ 30-—Å–µ–∫—É–Ω–¥–Ω–æ–≥–æ –æ—Ç—Ä—ã–≤–∫–∞
    def play_audio_segment():
        start = slider.get()  
        mixer.music.load(audio_path)
        mixer.music.play(start=start)
        
        def stop_after_30_seconds():
            time.sleep(30)
            mixer.music.stop()

        threading.Thread(target=stop_after_30_seconds, daemon=True).start()

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞
    def save_segment_and_open_new_window():
        start = slider.get()
        end = start + 30

        try:
            with open("time.txt", "w") as file:
                file.write(str(start))
                file.write('\n')
                file.write(str(end))
            messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", f"–ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ time.txt (Start: {start}, End: {end})")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª:\n{e}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—è
        player_window.destroy()
        calculate.calc_function()
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
        open_new_window()






    def open_new_window():
        new_window = tk.Toplevel()
        new_window.title("–ù–æ–≤–æ–µ –æ–∫–Ω–æ")
        new_window.geometry("800x600")
        mixer.init()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è pygame mixer

        # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
        audio_data = {}
        with open('similar.txt', 'r', encoding='utf-8') as file:
            lines = file.readlines()
            genre = lines[0].strip()  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∂–∞–Ω—Ä
            for i in range(1, len(lines), 2):
                audio_name = lines[i].strip()
                audio_number = lines[i + 1].strip()
                audio_data[audio_name] = audio_number

        # –í—ã–≤–æ–¥ –∂–∞–Ω—Ä–∞
        tk.Label(new_window, text=f"–ñ–∞–Ω—Ä: {genre}", font=("Arial", 14)).pack(pady=10)

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª–µ–π –∏ –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
        for audio_name, audio_number in audio_data.items():
            # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ—Ä–µ–π–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
            audio_frame = tk.Frame(new_window)
            audio_frame.pack(pady=10)

            # –í—ã–≤–æ–¥ –∏–º–µ–Ω–∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏
            tk.Label(audio_frame, text=audio_name, font=("Arial", 12)).pack(side=tk.LEFT)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ –∏–∑ —Ñ–∞–π–ª–∞
            audio_file_path = os.path.join(audio_name)  # –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É

            def play_audio(path=audio_file_path):  # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–º—ã–∫–∞–Ω–∏–µ
                mixer.music.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –º—É–∑—ã–∫—É
                mixer.music.load(path)
                mixer.music.play()

            play_button = tk.Button(audio_frame, text="–ò–≥—Ä–∞—Ç—å", command=play_audio, font=("Arial", 10))
            play_button.pack(side=tk.LEFT)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—É–¥–∏–æ
            stop_button = tk.Button(audio_frame, text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", command=mixer.music.stop, font=("Arial", 10))
            stop_button.pack(side=tk.LEFT)

            # –í—ã–≤–æ–¥–∏–º —á–∏—Å–ª–æ
            tk.Label(audio_frame, text=audio_number, font=("Arial", 12)).pack(side=tk.LEFT)

        # –ü—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –∏–∑ –ø–∞–ø–∫–∏ "upload"
        upload_audio_path = calculate.find_audio("upload/")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ "upload"
        upload_audio_name = upload_audio_path
    
        upload_frame = tk.Frame(new_window)
        upload_frame.pack(pady=10)
    
        tk.Label(upload_frame, text="–ò–∑ –ø–∞–ø–∫–∏ 'upload':", font=("Arial", 14)).pack(side=tk.LEFT)
    
        tk.Label(upload_frame, text=upload_audio_name, font=("Arial", 12)).pack(side=tk.LEFT)
    
        def play_upload_audio():
            mixer.music.stop()
            mixer.music.load(upload_audio_path)
            mixer.music.play()
    
        upload_play_button = tk.Button(upload_frame, text="–ò–≥—Ä–∞—Ç—å", command=play_upload_audio, font=("Arial", 10))
        upload_play_button.pack(side=tk.LEFT)
    
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—É–¥–∏–æ –∏–∑ –ø–∞–ø–∫–∏ "upload"
        upload_stop_button = tk.Button(upload_frame, text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", command=mixer.music.stop, font=("Arial", 10))
        upload_stop_button.pack(side=tk.LEFT)
    
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
        tk.Button(new_window, text="–ó–∞–∫—Ä—ã—Ç—å", command=new_window.destroy, font=("Arial", 12)).pack(pady=20)







    # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    play_button = tk.Button(player_window, text="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–µ—Å—å —Ç—Ä–µ–∫", command=play_audio, font=("Arial", 12))
    play_button.pack(pady=10)
    
    stop_button = tk.Button(player_window, text="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", command=stop_audio, font=("Arial", 12))
    stop_button.pack(pady=10)
    tk.Label(player_window, text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª–æ –æ—Ç—Ä—ã–≤–∫–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö):", font=("Arial", 12)).pack(pady=5)
    slider = tk.Scale(player_window, from_=0, to=100, orient=tk.HORIZONTAL, variable=start_time, font=("Arial", 12), length=400)
    slider.pack(pady=20)

    play_segment_button = tk.Button(player_window, text="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ 30 —Å–µ–∫—É–Ω–¥", command=play_audio_segment, font=("Arial", 12))
    play_segment_button.pack(pady=10)

    save_button = tk.Button(player_window, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤–æ–µ –æ–∫–Ω–æ", command=save_segment_and_open_new_window, font=("Arial", 12))
    save_button.pack(pady=20)

    def on_closing():
        stop_audio()
        player_window.destroy()

    player_window.protocol("WM_DELETE_WINDOW", on_closing)

    update_track_length()
    
# –û—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def create_app():
    root = tk.Tk()
    root.title("–ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ-—Ñ–∞–π–ª–∞")
    root.geometry("400x200")

    tk.Button(root, text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ-—Ñ–∞–π–ª", command=load_audio_file, font=("Arial", 14)).pack(pady=50)

    root.mainloop()

if __name__ == "__main__":
    create_app()